#
# MIT License
#
# Copyright(c) 2011-2020 The Maintainers of Nanvix
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

sudo: required

language: C

services:
- docker

env:
  global:
      - SSH_KEY=ssh/travis_libnanvix_rsa.enc
      - SSH_CONFIG=ssh/config
      - SERVER_NAME=mppa

jobs:
  include:
    # Build Debug
    - stage: "Build Debug"
      name: "QEMU OpenRISC"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-openrisc /bin/bash -l -c "cd /mnt && make contrib && make all"
    - stage: "Build Debug"
      name: "QEMU x86"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-x86      /bin/bash -l -c "cd /mnt && make contrib && make all"
    - stage: "Build Debug"
      name: "QEMU RISC-V 32-bit"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-riscv32  /bin/bash -l -c "cd /mnt && make contrib && make all"
    - stage: "Build Debug"
      name: "Unix 64-bit"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:unix64        /bin/bash -l -c "cd /mnt && make contrib && make all"
    - stage: "Build Debug"
      name: "OpTiMSoC"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-openrisc /bin/bash -l -c "cd /mnt && export TARGET=optimsoc && make contrib && make all"
    - stage: "Build Debug"
      name: "MPPA-256"
      if: (NOT type IN (pull_request))
      before_script:
        - openssl aes-256-cbc -K $encrypted_2d8ede8a7b76_key -iv $encrypted_2d8ede8a7b76_iv -in $SSH_KEY -out travis_libnanvix_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_libnanvix_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_libnanvix_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . $SERVER_NAME:~/travis/libnanvix
        - ssh $SERVER_NAME 'bash travis/build-libnanvix.sh --no-verbose --debug'

    # Build Release
    - stage: "Build Release"
      name: "QEMU OpenRISC"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-openrisc /bin/bash -l -c "cd /mnt && export RELEASE=true && make contrib && make all"
    - stage: "Build Release"
      name: "QEMU x86"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-x86      /bin/bash -l -c "cd /mnt && export RELEASE=true && make contrib && make all"
    - stage: "Build Release"
      name: "QEMU RISC-V 32-bit"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-riscv32  /bin/bash -l -c "cd /mnt && export RELEASE=true && make contrib && make all"
    - stage: "Build Release"
      name: "Unix 64-bit"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:unix64        /bin/bash -l -c "cd /mnt && export RELEASE=true && make contrib && make all"
    - stage: "Build Release"
      name: "OpTiMSoC"
      script: docker run -v "$(pwd):/mnt" -p 4567:4567 nanvix/ubuntu:qemu-openrisc /bin/bash -l -c "cd /mnt && export TARGET=optimsoc && export RELEASE=true && make contrib && make all"
    - stage: "Build Release"
      name: "MPPA-256"
      if: (NOT type IN (pull_request))
      before_script:
        - openssl aes-256-cbc -K $encrypted_2d8ede8a7b76_key -iv $encrypted_2d8ede8a7b76_iv -in $SSH_KEY -out travis_libnanvix_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_libnanvix_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_libnanvix_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . $SERVER_NAME:~/travis/libnanvix
        - ssh $SERVER_NAME 'bash travis/build-libnanvix.sh --no-verbose --release'

    # Tests Debug
    - stage: "Tests Debug"
      name: "Unix 64-bit"
      if: "(NOT type IN (pull_request))"
      before_script:
        - openssl aes-256-cbc -K $encrypted_2d8ede8a7b76_key -iv $encrypted_2d8ede8a7b76_iv -in $SSH_KEY -out travis_libnanvix_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_libnanvix_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_libnanvix_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . quadro:~/travis/libnanvix
        - ssh quadro 'bash travis/run-libnanvix.sh --silent --debug'
    - stage: "Tests Debug"
      name: "MPPA-256"
      if: (NOT type IN (pull_request))
      before_script:
        - openssl aes-256-cbc -K $encrypted_2d8ede8a7b76_key -iv $encrypted_2d8ede8a7b76_iv -in $SSH_KEY -out travis_libnanvix_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_libnanvix_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_libnanvix_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . $SERVER_NAME:~/travis/libnanvix
        - ssh $SERVER_NAME 'bash travis/test-libnanvix.sh --no-verbose --debug'

    # Tests Release
    - stage: "Tests Release"
      name: "Unix 64-bit"
      if: "(NOT type IN (pull_request))"
      before_script:
        - openssl aes-256-cbc -K $encrypted_2d8ede8a7b76_key -iv $encrypted_2d8ede8a7b76_iv -in $SSH_KEY -out travis_libnanvix_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_libnanvix_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_libnanvix_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . quadro:~/travis/libnanvix
        - ssh quadro 'bash travis/run-libnanvix.sh --silent --release'
    - stage: "Tests Release"
      name: "MPPA-256"
      if: (NOT type IN (pull_request))
      before_script:
        - openssl aes-256-cbc -K $encrypted_2d8ede8a7b76_key -iv $encrypted_2d8ede8a7b76_iv -in $SSH_KEY -out travis_libnanvix_rsa -d
        - eval "$(ssh-agent -s)"
        - chmod 600 travis_libnanvix_rsa
        - cp $SSH_CONFIG ~/.ssh/config
        - ssh-add travis_libnanvix_rsa
      script:
        - rsync -avz --delete-after --exclude=".git" . $SERVER_NAME:~/travis/libnanvix
        - ssh $SERVER_NAME 'bash travis/test-libnanvix.sh --no-verbose --release'

notifications:
  slack: nanvix:31ePVjsrXynUajPUDqy6I0hp
